#VERSION#
1.06
#SIGNALTUPLE#
1
20936
MEMWBR.EXEMEM_ALU_out
31
0
<obsolete>
0
<reference>
0
<resetValue>

1

u

#SIGNALTUPLE#
2
21005
MEMWBR.EXEMEM_funct3
2
0
<obsolete>
0
<reference>
0
<resetValue>

1

u

#SIGNALTUPLE#
3
20901
MEMWBR.EXEMEM_MemWrite
0
0
<obsolete>
0
<reference>
0
<resetValue>

1

u

#SIGNALTUPLE#
4
173
wire_pc_out[1:0]
31
0
<obsolete>
0
<reference>
0
<resetValue>

1

u

#SIGNALTUPLE#
5
173
wire_pc_out[31:16]
31
0
<obsolete>
0
<reference>
0
<resetValue>

1

u

#SIGNALTUPLE#
6
1676
IM1.CS
0
0
<obsolete>
0
<reference>
0
<resetValue>

1

u

#SIGNALTUPLE#
7
2002
IM1.i_SRAM.latched_DO[0]
31
0
<obsolete>
0
<reference>
0
<resetValue>

1

u

#POITUPLE#
1
11
2
1
0
0
0
5
<user-defined>
0
<obsolete>
0
<userdefined-clocks>
0
0
<clocks>
1
clock

1
clock
1
2
1
2
11
2
MEMWBR.automatic_out_of_bound_0
MEMWBR.automatic_out_of_bound_0_precond
<signalCorrelation-vector>
0
0
0
1
1
0
0
0
../src/./MEMWBR.sv
MEMWBR
17
52
37
37
#POITUPLE#
2
11
2
1
0
0
0
5
<user-defined>
0
<obsolete>
0
<userdefined-clocks>
0
0
<clocks>
1
clock

1
clock
1
2
1
2
11
2
MEMWBR.automatic_out_of_bound_1
MEMWBR.automatic_out_of_bound_1_precond
<signalCorrelation-vector>
0
0
0
1
2
0
0
0
../src/./MEMWBR.sv
MEMWBR
17
51
39
39
#POITUPLE#
3
11
2
1
0
0
0
5
<user-defined>
0
<obsolete>
0
<userdefined-clocks>
0
0
<clocks>
1
clock

1
clock
1
3
1
3
2
11
2
MEMWBR.automatic_out_of_bound_2
MEMWBR.automatic_out_of_bound_2_precond
<signalCorrelation-vector>
0
0
0
1
3
0
0
0
../src/./MEMWBR.sv
MEMWBR
21
66
52
52
#POITUPLE#
4
11
2
1
0
0
0
18
<user-defined>
0
<obsolete>
0
<userdefined-clocks>
0
0
<clocks>
1
clock
:global_clock
1
clock
1
0
19
0
<signalCorrelation-vector>
0
0
0
1
4
0
0
0
../sim/SRAM/SRAM_rtl.sv
IM1.i_SRAM
1
1
1
1
#POITUPLE#
5
11
2
1
0
0
0
18
<user-defined>
0
<obsolete>
0
<userdefined-clocks>
0
0
<clocks>
1
clock
:global_clock
1
clock
1
0
19
0
<signalCorrelation-vector>
0
0
0
1
5
0
0
0
../sim/SRAM/SRAM_rtl.sv
IM1.i_SRAM
10
48
167
167
#POITUPLE#
6
11
2
1
0
0
0
18
<user-defined>
0
<obsolete>
0
<userdefined-clocks>
0
0
<clocks>
1
clock
:global_clock
1
clock
1
0
19
0
<signalCorrelation-vector>
0
0
0
1
6
0
0
0
../sim/SRAM/SRAM_rtl.sv
IM1.i_SRAM
42
46
167
167
#POITUPLE#
7
11
2
1
0
0
0
14
<user-defined>
0
<obsolete>
0
<userdefined-clocks>
0
0
<clocks>
1
clock
:global_clock
1
clock
1
0
19
1
EXEMEMR.ALU
<signalCorrelation-vector>
0
0
0
1
7
0
0
0
../src/././ALU.sv
EXEMEMR.ALU
19
56
38
38
#POITUPLE#
8
11
2
1
0
0
0
14
<user-defined>
0
<obsolete>
0
<userdefined-clocks>
0
0
<clocks>
1
clock
:global_clock
1
clock
1
0
19
1
EXEMEMR.ALU
<signalCorrelation-vector>
0
0
0
1
8
0
0
0
../src/././ALU.sv
EXEMEMR.ALU
21
65
39
39
#POITUPLE#
9
11
2
1
0
0
0
0
<user-defined>
0
<obsolete>
0
<userdefined-clocks>
0
0
<clocks>
1
clock

1
clock
1
1
4
19
1
top
<signalCorrelation-vector>
0
0
0
1
9
0
0
0
../src/top.sv

29
40
27
27
#POITUPLE#
10
11
2
1
0
0
0
0
<user-defined>
0
<obsolete>
0
<userdefined-clocks>
0
0
<clocks>
1
clock

1
clock
1
1
5
19
1
top
<signalCorrelation-vector>
0
0
0
1
10
0
0
0
../src/top.sv

29
40
27
27
#POITUPLE#
11
11
2
1
0
0
0
18
<user-defined>
0
<obsolete>
0
<userdefined-clocks>
0
0
<clocks>
1
clock
:global_clock
1
clock
1
0
19
0
<signalCorrelation-vector>
0
0
0
1
11
0
0
0
../sim/SRAM/SRAM_rtl.sv
IM1.i_SRAM
1
1
1
1
#POITUPLE#
12
11
2
1
0
0
0
18
<user-defined>
0
<obsolete>
0
<userdefined-clocks>
0
0
<clocks>
1
clock
:global_clock
1
clock
1
0
19
0
<signalCorrelation-vector>
0
0
0
1
12
0
0
0
../sim/SRAM/SRAM_rtl.sv
IM1.i_SRAM
17
6
122
163
#POITUPLE#
13
11
2
1
0
0
0
18
<user-defined>
0
<obsolete>
0
<userdefined-clocks>
0
0
<clocks>
1
clock
:global_clock
1
clock
1
0
19
0
<signalCorrelation-vector>
0
0
0
1
13
0
0
0
../sim/SRAM/SRAM_rtl.sv
IM1.i_SRAM
3
6
165
168
#POITUPLE#
14
11
2
1
0
0
0
18
<user-defined>
0
<obsolete>
0
<userdefined-clocks>
0
0
<clocks>
1
clock
:global_clock
1
clock
1
0
19
0
<signalCorrelation-vector>
0
0
0
1
14
0
0
0
../sim/SRAM/SRAM_rtl.sv
IM1.i_SRAM
3
6
165
168
#POITUPLE#
15
11
2
1
0
0
0
18
<user-defined>
0
<obsolete>
0
<userdefined-clocks>
0
0
<clocks>
1
clock
:global_clock
1
clock
1
0
19
0
<signalCorrelation-vector>
0
0
0
1
15
0
0
0
../sim/SRAM/SRAM_rtl.sv
IM1.i_SRAM
3
6
165
168
#POITUPLE#
16
11
2
1
0
0
0
18
<user-defined>
0
<obsolete>
0
<userdefined-clocks>
0
0
<clocks>
1
clock
:global_clock
1
clock
1
0
19
0
<signalCorrelation-vector>
0
0
0
1
16
0
0
0
../sim/SRAM/SRAM_rtl.sv
IM1.i_SRAM
3
6
165
168
#POITUPLE#
17
11
2
1
0
0
0
18
<user-defined>
0
<obsolete>
0
<userdefined-clocks>
0
0
<clocks>
1
clock
:global_clock
1
clock
1
0
19
0
<signalCorrelation-vector>
0
0
0
1
17
0
0
0
../sim/SRAM/SRAM_rtl.sv
IM1.i_SRAM
3
6
165
168
#POITUPLE#
18
11
2
1
0
0
0
18
<user-defined>
0
<obsolete>
0
<userdefined-clocks>
0
0
<clocks>
1
clock
:global_clock
1
clock
1
0
19
0
<signalCorrelation-vector>
0
0
0
1
18
0
0
0
../sim/SRAM/SRAM_rtl.sv
IM1.i_SRAM
3
6
165
168
#POITUPLE#
19
11
2
1
0
0
0
18
<user-defined>
0
<obsolete>
0
<userdefined-clocks>
0
0
<clocks>
1
clock
:global_clock
1
clock
1
0
19
0
<signalCorrelation-vector>
0
0
0
1
19
0
0
0
../sim/SRAM/SRAM_rtl.sv
IM1.i_SRAM
3
6
165
168
#POITUPLE#
20
11
2
1
0
0
0
18
<user-defined>
0
<obsolete>
0
<userdefined-clocks>
0
0
<clocks>
1
clock
:global_clock
1
clock
1
0
19
0
<signalCorrelation-vector>
0
0
0
1
20
0
0
0
../sim/SRAM/SRAM_rtl.sv
IM1.i_SRAM
3
6
165
168
#POITUPLE#
21
11
2
1
0
0
0
18
<user-defined>
0
<obsolete>
0
<userdefined-clocks>
0
0
<clocks>
1
clock
:global_clock
1
clock
1
0
19
0
<signalCorrelation-vector>
0
0
0
1
21
0
0
0
../sim/SRAM/SRAM_rtl.sv
IM1.i_SRAM
3
6
165
168
#POITUPLE#
22
11
2
1
0
0
0
18
<user-defined>
0
<obsolete>
0
<userdefined-clocks>
0
0
<clocks>
1
clock
:global_clock
1
clock
1
0
19
0
<signalCorrelation-vector>
0
0
0
1
22
0
0
0
../sim/SRAM/SRAM_rtl.sv
IM1.i_SRAM
3
6
165
168
#POITUPLE#
23
11
2
1
0
0
0
18
<user-defined>
0
<obsolete>
0
<userdefined-clocks>
0
0
<clocks>
1
clock
:global_clock
1
clock
1
0
19
0
<signalCorrelation-vector>
0
0
0
1
23
0
0
0
../sim/SRAM/SRAM_rtl.sv
IM1.i_SRAM
3
6
165
168
#POITUPLE#
24
11
2
1
0
0
0
18
<user-defined>
0
<obsolete>
0
<userdefined-clocks>
0
0
<clocks>
1
clock
:global_clock
1
clock
1
0
19
0
<signalCorrelation-vector>
0
0
0
1
24
0
0
0
../sim/SRAM/SRAM_rtl.sv
IM1.i_SRAM
3
6
165
168
#POITUPLE#
25
11
2
1
0
0
0
18
<user-defined>
0
<obsolete>
0
<userdefined-clocks>
0
0
<clocks>
1
clock
:global_clock
1
clock
1
0
19
0
<signalCorrelation-vector>
0
0
0
1
25
0
0
0
../sim/SRAM/SRAM_rtl.sv
IM1.i_SRAM
3
6
165
168
#POITUPLE#
26
11
2
1
0
0
0
18
<user-defined>
0
<obsolete>
0
<userdefined-clocks>
0
0
<clocks>
1
clock
:global_clock
1
clock
1
0
19
0
<signalCorrelation-vector>
0
0
0
1
26
0
0
0
../sim/SRAM/SRAM_rtl.sv
IM1.i_SRAM
3
6
165
168
#POITUPLE#
27
11
2
1
0
0
0
11
<user-defined>
0
<obsolete>
0
<userdefined-clocks>
0
0
<clocks>
1
clock
:global_clock
1
clock
1
0
19
0
<signalCorrelation-vector>
0
0
0
1
27
0
0
0
../sim/SRAM/SRAM_rtl.sv
DM1.i_SRAM
3
6
165
168
#POITUPLE#
28
11
2
1
0
0
0
11
<user-defined>
0
<obsolete>
0
<userdefined-clocks>
0
0
<clocks>
1
clock
:global_clock
1
clock
1
0
19
0
<signalCorrelation-vector>
0
0
0
1
28
0
0
0
../sim/SRAM/SRAM_rtl.sv
DM1.i_SRAM
3
6
165
168
#POITUPLE#
29
11
2
1
0
0
0
11
<user-defined>
0
<obsolete>
0
<userdefined-clocks>
0
0
<clocks>
1
clock
:global_clock
1
clock
1
0
19
0
<signalCorrelation-vector>
0
0
0
1
29
0
0
0
../sim/SRAM/SRAM_rtl.sv
DM1.i_SRAM
3
6
165
168
#POITUPLE#
30
11
2
1
0
0
0
11
<user-defined>
0
<obsolete>
0
<userdefined-clocks>
0
0
<clocks>
1
clock
:global_clock
1
clock
1
0
19
0
<signalCorrelation-vector>
0
0
0
1
30
0
0
0
../sim/SRAM/SRAM_rtl.sv
DM1.i_SRAM
3
6
165
168
#POITUPLE#
31
11
2
1
0
0
0
11
<user-defined>
0
<obsolete>
0
<userdefined-clocks>
0
0
<clocks>
1
clock
:global_clock
1
clock
1
0
19
0
<signalCorrelation-vector>
0
0
0
1
31
0
0
0
../sim/SRAM/SRAM_rtl.sv
DM1.i_SRAM
3
6
165
168
#POITUPLE#
32
11
2
1
0
0
0
11
<user-defined>
0
<obsolete>
0
<userdefined-clocks>
0
0
<clocks>
1
clock
:global_clock
1
clock
1
0
19
0
<signalCorrelation-vector>
0
0
0
1
32
0
0
0
../sim/SRAM/SRAM_rtl.sv
DM1.i_SRAM
3
6
165
168
#POITUPLE#
33
11
2
1
0
0
0
11
<user-defined>
0
<obsolete>
0
<userdefined-clocks>
0
0
<clocks>
1
clock
:global_clock
1
clock
1
0
19
0
<signalCorrelation-vector>
0
0
0
1
33
0
0
0
../sim/SRAM/SRAM_rtl.sv
DM1.i_SRAM
3
6
165
168
#POITUPLE#
34
11
2
1
0
0
0
11
<user-defined>
0
<obsolete>
0
<userdefined-clocks>
0
0
<clocks>
1
clock
:global_clock
1
clock
1
0
19
0
<signalCorrelation-vector>
0
0
0
1
34
0
0
0
../sim/SRAM/SRAM_rtl.sv
DM1.i_SRAM
3
6
165
168
#POITUPLE#
35
11
2
1
0
0
0
11
<user-defined>
0
<obsolete>
0
<userdefined-clocks>
0
0
<clocks>
1
clock
:global_clock
1
clock
1
0
19
0
<signalCorrelation-vector>
0
0
0
1
35
0
0
0
../sim/SRAM/SRAM_rtl.sv
DM1.i_SRAM
3
6
165
168
#POITUPLE#
36
11
2
1
0
0
0
11
<user-defined>
0
<obsolete>
0
<userdefined-clocks>
0
0
<clocks>
1
clock
:global_clock
1
clock
1
0
19
0
<signalCorrelation-vector>
0
0
0
1
36
0
0
0
../sim/SRAM/SRAM_rtl.sv
DM1.i_SRAM
3
6
165
168
#POITUPLE#
37
11
2
1
0
0
0
11
<user-defined>
0
<obsolete>
0
<userdefined-clocks>
0
0
<clocks>
1
clock
:global_clock
1
clock
1
0
19
0
<signalCorrelation-vector>
0
0
0
1
37
0
0
0
../sim/SRAM/SRAM_rtl.sv
DM1.i_SRAM
3
6
165
168
#POITUPLE#
38
11
2
1
0
0
0
11
<user-defined>
0
<obsolete>
0
<userdefined-clocks>
0
0
<clocks>
1
clock
:global_clock
1
clock
1
0
19
0
<signalCorrelation-vector>
0
0
0
1
38
0
0
0
../sim/SRAM/SRAM_rtl.sv
DM1.i_SRAM
3
6
165
168
#POITUPLE#
39
11
2
1
0
0
0
11
<user-defined>
0
<obsolete>
0
<userdefined-clocks>
0
0
<clocks>
1
clock
:global_clock
1
clock
1
0
19
0
<signalCorrelation-vector>
0
0
0
1
39
0
0
0
../sim/SRAM/SRAM_rtl.sv
DM1.i_SRAM
3
6
165
168
#POITUPLE#
40
11
2
1
0
0
0
11
<user-defined>
0
<obsolete>
0
<userdefined-clocks>
0
0
<clocks>
1
clock
:global_clock
1
clock
1
0
19
0
<signalCorrelation-vector>
0
0
0
1
40
0
0
0
../sim/SRAM/SRAM_rtl.sv
DM1.i_SRAM
3
6
165
168
#POITUPLE#
41
11
2
1
0
0
0
11
<user-defined>
0
<obsolete>
0
<userdefined-clocks>
0
0
<clocks>
1
clock
:global_clock
1
clock
1
0
19
0
<signalCorrelation-vector>
0
0
0
1
41
0
0
0
../sim/SRAM/SRAM_rtl.sv
DM1.i_SRAM
3
6
165
168
#POITUPLE#
42
11
2
1
0
0
0
11
<user-defined>
0
<obsolete>
0
<userdefined-clocks>
0
0
<clocks>
1
clock
:global_clock
1
clock
1
0
19
0
<signalCorrelation-vector>
0
0
0
1
42
0
0
0
../sim/SRAM/SRAM_rtl.sv
DM1.i_SRAM
3
6
165
168
#POITUPLE#
43
11
2
1
0
0
0
11
<user-defined>
0
<obsolete>
0
<userdefined-clocks>
0
0
<clocks>
1
clock
:global_clock
1
clock
1
0
19
0
<signalCorrelation-vector>
0
0
0
1
43
0
0
0
../sim/SRAM/SRAM_rtl.sv
DM1.i_SRAM
3
6
165
168
#POITUPLE#
44
11
2
1
0
0
0
11
<user-defined>
0
<obsolete>
0
<userdefined-clocks>
0
0
<clocks>
1
clock
:global_clock
1
clock
1
0
19
0
<signalCorrelation-vector>
0
0
0
1
44
0
0
0
../sim/SRAM/SRAM_rtl.sv
DM1.i_SRAM
3
6
165
168
#POITUPLE#
45
11
2
1
0
0
0
2
<user-defined>
0
<obsolete>
0
<userdefined-clocks>
0
0
<clocks>
1
clock

1
clock
1
2
6
7
19
0
<signalCorrelation-vector>
0
0
0
1
45
0
0
0
../src/./SRAM_wrapper.sv
IM1
9
11
3
3
#PROPERTYTUPLE#
1
1
0
1
4
1
1
4096
0
<obsolete>
0
<label>

<rank>
0
<tag_type>
10
<fpv-status-info>
<SL_AUTO_FORMAL_OUT_OF_BOUND_INDEXING>
1
<SL_AUTO_FORMAL_OUT_OF_BOUND_INDEXING>
unprocessed
?

0
0
1
0



out_of_bound_indexing_prop_1
0
<covered_reset>
0
<waiver-info>
1
0
<sva-suffix>
<property-progress-state-list>
1
16777217
1
(MEMWBR.EXEMEM_funct3 == 3'b0) |-> ({MEMWBR.EXEMEM_ALU_out[1:0], 3'b0} <= 5'b11000)
0
#PROPERTYTUPLE#
2
2
0
1
4
1
1
4096
0
<obsolete>
0
<label>

<rank>
0
<tag_type>
10
<fpv-status-info>
<SL_AUTO_FORMAL_OUT_OF_BOUND_INDEXING>
1
<SL_AUTO_FORMAL_OUT_OF_BOUND_INDEXING>
unprocessed
?

0
0
1
0



out_of_bound_indexing_prop_2
0
<covered_reset>
0
<waiver-info>
1
0
<sva-suffix>
<property-progress-state-list>
1
16777217
1
(MEMWBR.EXEMEM_funct3 == 3'b1) |-> ({MEMWBR.EXEMEM_ALU_out[1], 4'b0} <= 5'b10000)
0
#PROPERTYTUPLE#
3
3
0
1
4
1
1
4096
0
<obsolete>
0
<label>

<rank>
0
<tag_type>
10
<fpv-status-info>
<SL_AUTO_FORMAL_OUT_OF_BOUND_INDEXING>
1
<SL_AUTO_FORMAL_OUT_OF_BOUND_INDEXING>
unprocessed
?

0
0
1
0



out_of_bound_indexing_prop_3
0
<covered_reset>
0
<waiver-info>
1
0
<sva-suffix>
<property-progress-state-list>
1
16777217
1
(MEMWBR.EXEMEM_MemWrite & (MEMWBR.EXEMEM_funct3 == 3'b1)) |-> ({MEMWBR.EXEMEM_ALU_out[1], 1'b0} <= 2'b10)
0
#MESSAGETUPLE#
0
4
4
FIL_MS_DUNM
Warning
"Module name 'SRAM' differs from file name 'SRAM_rtl.sv'"
0
<label>

<waivers>
0
0
1
#MESSAGETUPLE#
0
5
5
ALW_NR_TRIL
Warning
"Tristate logic inferred in always block"
0
<label>

<waivers>
0
0
1
#MESSAGETUPLE#
0
6
6
MOD_NR_SYXZ
Warning
"Synthesizing 'x'/'z' values in module 'SRAM'"
0
<label>

<waivers>
0
0
1
#MESSAGETUPLE#
0
7
7
ASG_MS_RPAD
Warning
"Unequal length operands in assignment in module/design-unit 'EXEMEMR.ALU'. Length of RHS is less than LHS. LHS 'mulh' (unsigned) - 64 bit(s), RHS '($signed(rs1_data) * $signed(rs2_data))' (signed) - 32 bit(s). RHS will be padded by 32 bit(s)."
0
<label>

<waivers>
0
0
1
#MESSAGETUPLE#
0
8
8
ASG_MS_RPAD
Warning
"Unequal length operands in assignment in module/design-unit 'EXEMEMR.ALU'. Length of RHS is less than LHS. LHS 'mulhsu' (unsigned) - 64 bit(s), RHS '($signed(rs1_data) * $signed({1'b0,rs2_data}))' (signed) - 33 bit(s). RHS will be padded by 31 bit(s)."
0
<label>

<waivers>
0
0
1
#MESSAGETUPLE#
0
9
9
WIR_NO_READ
Warning
"Wire 'wire_pc_out[1:0]' defined in module 'top' does not drive any object, but is assigned at least once"
0
<label>

<waivers>
0
0
1
#MESSAGETUPLE#
0
10
10
WIR_NO_READ
Warning
"Wire 'wire_pc_out[31:16]' defined in module 'top' does not drive any object, but is assigned at least once"
0
<label>

<waivers>
0
0
1
#MESSAGETUPLE#
0
11
11
FIL_NF_NMCV
Warning
"File name 'SRAM_rtl.sv' does not follow the recommended naming convention : should contain only the module name"
0
<label>

<waivers>
0
0
1
#MESSAGETUPLE#
0
12
12
FLP_NO_ASRT
Warning
"Flip-flop 'latched_DO' does not have any asynchronous set or reset"
0
<label>

<waivers>
0
0
1
#MESSAGETUPLE#
0
13
13
SIG_IS_INTB
Warning
"Signal 'DO[13]' defined in module/design-unit 'SRAM', is inferred as a tri-state buffer"
0
<label>

<waivers>
0
0
1
#MESSAGETUPLE#
0
14
14
SIG_IS_INTB
Warning
"Signal 'DO[12]' defined in module/design-unit 'SRAM', is inferred as a tri-state buffer"
0
<label>

<waivers>
0
0
1
#MESSAGETUPLE#
0
15
15
SIG_IS_INTB
Warning
"Signal 'DO[11]' defined in module/design-unit 'SRAM', is inferred as a tri-state buffer"
0
<label>

<waivers>
0
0
1
#MESSAGETUPLE#
0
16
16
SIG_IS_INTB
Warning
"Signal 'DO[10]' defined in module/design-unit 'SRAM', is inferred as a tri-state buffer"
0
<label>

<waivers>
0
0
1
#MESSAGETUPLE#
0
17
17
SIG_IS_INTB
Warning
"Signal 'DO[9]' defined in module/design-unit 'SRAM', is inferred as a tri-state buffer"
0
<label>

<waivers>
0
0
1
#MESSAGETUPLE#
0
18
18
SIG_IS_INTB
Warning
"Signal 'DO[8]' defined in module/design-unit 'SRAM', is inferred as a tri-state buffer"
0
<label>

<waivers>
0
0
1
#MESSAGETUPLE#
0
19
19
SIG_IS_INTB
Warning
"Signal 'DO[7]' defined in module/design-unit 'SRAM', is inferred as a tri-state buffer"
0
<label>

<waivers>
0
0
1
#MESSAGETUPLE#
0
20
20
SIG_IS_INTB
Warning
"Signal 'DO[6]' defined in module/design-unit 'SRAM', is inferred as a tri-state buffer"
0
<label>

<waivers>
0
0
1
#MESSAGETUPLE#
0
21
21
SIG_IS_INTB
Warning
"Signal 'DO[5]' defined in module/design-unit 'SRAM', is inferred as a tri-state buffer"
0
<label>

<waivers>
0
0
1
#MESSAGETUPLE#
0
22
22
SIG_IS_INTB
Warning
"Signal 'DO[4]' defined in module/design-unit 'SRAM', is inferred as a tri-state buffer"
0
<label>

<waivers>
0
0
1
#MESSAGETUPLE#
0
23
23
SIG_IS_INTB
Warning
"Signal 'DO[3]' defined in module/design-unit 'SRAM', is inferred as a tri-state buffer"
0
<label>

<waivers>
0
0
1
#MESSAGETUPLE#
0
24
24
SIG_IS_INTB
Warning
"Signal 'DO[2]' defined in module/design-unit 'SRAM', is inferred as a tri-state buffer"
0
<label>

<waivers>
0
0
1
#MESSAGETUPLE#
0
25
25
SIG_IS_INTB
Warning
"Signal 'DO[1]' defined in module/design-unit 'SRAM', is inferred as a tri-state buffer"
0
<label>

<waivers>
0
0
1
#MESSAGETUPLE#
0
26
26
SIG_IS_INTB
Warning
"Signal 'DO[0]' defined in module/design-unit 'SRAM', is inferred as a tri-state buffer"
0
<label>

<waivers>
0
0
1
#MESSAGETUPLE#
0
27
27
SIG_IS_INTB
Warning
"Signal 'DO[31]' defined in module/design-unit 'SRAM', is inferred as a tri-state buffer"
0
<label>

<waivers>
0
0
1
#MESSAGETUPLE#
0
28
28
SIG_IS_INTB
Warning
"Signal 'DO[30]' defined in module/design-unit 'SRAM', is inferred as a tri-state buffer"
0
<label>

<waivers>
0
0
1
#MESSAGETUPLE#
0
29
29
SIG_IS_INTB
Warning
"Signal 'DO[29]' defined in module/design-unit 'SRAM', is inferred as a tri-state buffer"
0
<label>

<waivers>
0
0
1
#MESSAGETUPLE#
0
30
30
SIG_IS_INTB
Warning
"Signal 'DO[28]' defined in module/design-unit 'SRAM', is inferred as a tri-state buffer"
0
<label>

<waivers>
0
0
1
#MESSAGETUPLE#
0
31
31
SIG_IS_INTB
Warning
"Signal 'DO[27]' defined in module/design-unit 'SRAM', is inferred as a tri-state buffer"
0
<label>

<waivers>
0
0
1
#MESSAGETUPLE#
0
32
32
SIG_IS_INTB
Warning
"Signal 'DO[26]' defined in module/design-unit 'SRAM', is inferred as a tri-state buffer"
0
<label>

<waivers>
0
0
1
#MESSAGETUPLE#
0
33
33
SIG_IS_INTB
Warning
"Signal 'DO[25]' defined in module/design-unit 'SRAM', is inferred as a tri-state buffer"
0
<label>

<waivers>
0
0
1
#MESSAGETUPLE#
0
34
34
SIG_IS_INTB
Warning
"Signal 'DO[24]' defined in module/design-unit 'SRAM', is inferred as a tri-state buffer"
0
<label>

<waivers>
0
0
1
#MESSAGETUPLE#
0
35
35
SIG_IS_INTB
Warning
"Signal 'DO[23]' defined in module/design-unit 'SRAM', is inferred as a tri-state buffer"
0
<label>

<waivers>
0
0
1
#MESSAGETUPLE#
0
36
36
SIG_IS_INTB
Warning
"Signal 'DO[22]' defined in module/design-unit 'SRAM', is inferred as a tri-state buffer"
0
<label>

<waivers>
0
0
1
#MESSAGETUPLE#
0
37
37
SIG_IS_INTB
Warning
"Signal 'DO[21]' defined in module/design-unit 'SRAM', is inferred as a tri-state buffer"
0
<label>

<waivers>
0
0
1
#MESSAGETUPLE#
0
38
38
SIG_IS_INTB
Warning
"Signal 'DO[20]' defined in module/design-unit 'SRAM', is inferred as a tri-state buffer"
0
<label>

<waivers>
0
0
1
#MESSAGETUPLE#
0
39
39
SIG_IS_INTB
Warning
"Signal 'DO[19]' defined in module/design-unit 'SRAM', is inferred as a tri-state buffer"
0
<label>

<waivers>
0
0
1
#MESSAGETUPLE#
0
40
40
SIG_IS_INTB
Warning
"Signal 'DO[18]' defined in module/design-unit 'SRAM', is inferred as a tri-state buffer"
0
<label>

<waivers>
0
0
1
#MESSAGETUPLE#
0
41
41
SIG_IS_INTB
Warning
"Signal 'DO[17]' defined in module/design-unit 'SRAM', is inferred as a tri-state buffer"
0
<label>

<waivers>
0
0
1
#MESSAGETUPLE#
0
42
42
SIG_IS_INTB
Warning
"Signal 'DO[16]' defined in module/design-unit 'SRAM', is inferred as a tri-state buffer"
0
<label>

<waivers>
0
0
1
#MESSAGETUPLE#
0
43
43
SIG_IS_INTB
Warning
"Signal 'DO[15]' defined in module/design-unit 'SRAM', is inferred as a tri-state buffer"
0
<label>

<waivers>
0
0
1
#MESSAGETUPLE#
0
44
44
SIG_IS_INTB
Warning
"Signal 'DO[14]' defined in module/design-unit 'SRAM', is inferred as a tri-state buffer"
0
<label>

<waivers>
0
0
1
#MESSAGETUPLE#
0
45
45
FLP_NR_ENCT
Warning
"Signal 'IM1.CS' driving enable pin of flip-flop 'IM1.i_SRAM.latched_DO[0]' is permanently enabled"
0
<label>

<waivers>
0
0
1
#MODULETUPLE#
1
IFIDR_MUX
1
1
#MODULETUPLE#
2
SRAM_wrapper
2
2
6
#MODULETUPLE#
3
IDEXER
1
3
#MODULETUPLE#
4
EXEMEMR
1
4
#MODULETUPLE#
5
MEMWBR
1
5
#MODULETUPLE#
6
WB
1
7
#MODULETUPLE#
7
FORWARDUNIT
1
8
#MODULETUPLE#
8
BRANCHCONTROL
1
9
#MODULETUPLE#
9
HAZARDCONTROL
1
10
#MODULETUPLE#
10
SRAM
2
11
18
#MODULETUPLE#
11
ALUCONTROL
1
12
#MODULETUPLE#
12
COUNTER
1
13
#MODULETUPLE#
13
ALU
1
14
#MODULETUPLE#
14
IMMG
1
15
#MODULETUPLE#
15
REGFILE
1
16
#MODULETUPLE#
16
CONTROL_UNIT
1
17
#MODULETUPLE#
17
PC_MUX
1
19
#INSTANCETUPLE#
1
IFIDR_MUX
1
#INSTANCETUPLE#
2
IM1
2
#INSTANCETUPLE#
3
IDEXER
3
#INSTANCETUPLE#
4
EXEMEMR
4
#INSTANCETUPLE#
5
MEMWBR
5
#INSTANCETUPLE#
6
DM1
2
#INSTANCETUPLE#
7
WB
6
#INSTANCETUPLE#
8
FORWARDUNIT
7
#INSTANCETUPLE#
9
BRANCHCONTROL
8
#INSTANCETUPLE#
10
HAZARDCONTROL
9
#INSTANCETUPLE#
11
DM1.i_SRAM
10
#INSTANCETUPLE#
12
EXEMEMR.ALUCONTROL
11
#INSTANCETUPLE#
13
EXEMEMR.COUNTER
12
#INSTANCETUPLE#
14
EXEMEMR.ALU
13
#INSTANCETUPLE#
15
IDEXER.IMMG
14
#INSTANCETUPLE#
16
IDEXER.REGFILE
15
#INSTANCETUPLE#
17
IDEXER.CONTROL_UNIT
16
#INSTANCETUPLE#
18
IM1.i_SRAM
10
#INSTANCETUPLE#
19
IFIDR_MUX.PC_MUX
17
#SCANHISTORYTUPLE#
0
0
0
<source-checksums>
0
<tag-category>
0
<tag-defenition>
19

23

   module top (clk1,reset,out);
   input clk1,reset;
   reg [7:0] count1;
   output [7:0] out;
   always @(posedge clk1)begin
     if(!reset)begin
       count1 <= 8'b00000000;
     end
     else begin
       if (count1 == 8'b11111110)
       begin
          count1 <= 8'b00000000;
       end
       else begin
         count1 = count1+ 8'b00000010;
       end
     end
   end
   assign out = count1;
   endmodule
   In the given example, a violation is reported for count1, in which the signal
   does not toggle to its original value at any point of time.
ARY_IS_OOBI
20
   A bit/part select reference in an expression has an index specification
   outside of the defined range of the variable.
   This can lead to unexpected results. It is
   recommended that this reference be modified such that the index/subrange
   falls within the defined range.
   The following code illustrates the problem.
   module test1 (a, b, out1);
   input [3:0] a;
   input [3:0] b;
   output out1;
   wire [3:0] a;
   reg [2:0] out1;
   wire [2:-1] q;
   wire [2:-4] w;
   always @(a or b)
       out1 = q[4] & b[3];
       assign a[3] = out1[3];
     assign q = w[1+:3];
   endmodule
   In the above code, 'q[4]' and 'out1[3]' are used, which are outside the defined range.
ASG_IS_XRCH
12
   A reachable X assignment was detected in the design.
   If the X assignment is reachable, it will become
   an active X source. 'X' source present in the design can lead to unexpected functionality.

   The following examples illustrates this problem:
   always @(port_a or port_b or port_c or port_d)
   casez(port_d)
       2'b00: port_e = port_a;
       2'b01: port_e = port_b;
       2'b10: port_e = port_c;
       2'b11: port_e = 4'b00xx;
   endcase
BLK_NO_RCHB
20
   Unreachable block statement was detected. This needs to be reviewed to determine if this is intentional or undesired. RTL needs to be modified accordingly.
   The following example illustrates the issue:

   module blkif (out, a, b);
   input a, b;
   output out;
   reg out;
   wire sel;
   assign sel = 1'b1;
   always @(sel or a or b)
   begin
   if (sel)
       out <= a;
   else
       out <= b;
   end
  endmodule
  In the given example, a violation is reported as 'sel' has a 
  a constant value due to which one branch of the 'if' block is not reachable.

BUS_IS_CONT
8
   The specified bus has multiple drivers which can
   be active simultaneously. This may lead to signal/register
   having undefined/unexpected value.

   The following example illustrates the problem:
   assign sig_a = var_a;
   assign sig_a = var_b;
   In the above example, 'sig_a' is multiply driven.
BUS_IS_FLOT
21
   A bus without any driver was detected. This could be unintentional and can lead to unexpected functionality. 

   Following example illustrates this scenario:
   module mod_a(port_a, port_b, port_c, reg_a, reg_b, reg_c);
       input [1:0] port_a, port_b, port_c;
       output [1:0] reg_a, reg_b, reg_c;
       reg  [1:0] reg_a;
       reg  [1:0] reg_b;
       reg  [1:0] reg_c;
       wire [1:0] wir_a;
       wire [1:0] wir_b;
       wire [1:0] wir_c;

       assign wire_a = port_a;
       assign reg_a = wir_a;
       assign reg_b = wir_b;

   endmodule

   reg_b is a floating bus. 
   Design needs to be remodelled to avoid this problem.
CAS_IS_DFRC
31
   The case statement has a default case which is reachable. This could be a result of an incompletely specified case.
   The following example illustrates this scenario:

   module FSM (clk, rst);
   input clk, rst;
   reg [2:0] state, next;
   wire en;
   always @(posedge clk)
       if (rst)
           state <= 3'b000;
       else
           state <= next;
   always @(state)
   begin
   case(state)
       3'b000: 
           next = 3'b001;
       3'b001: 
           if (en)
               next = 3'b010;
           else
               next = 3'b011;
       3'b010: 
               next = 3'b100;
       3'b011: 
               next = 3'b101;
       default:
               next = 3'bxxx;
   endcase
   end
   endmodule
CAS_NO_PRIO
16
   The keywords 'unique' and 'priority' indicate the intent that the case statement will have exactly one case item that matches the case expression. However, the specified case statement, qualified with a'priority' keyword, does not have all the cases covered. 
   The following example illustrates this problem:
   module mod_a (port_a, port_b, port_c);
       input [3:0] port_a;
       input [1:0] port_c;
       output port_b;
       reg port_b;
       always @(port_c)
       begin
           priority case(port_c)
           2'b01 : port_b = port_a[1];
           2'b10 : port_b = port_a[2];
           2'b11 : port_b = port_a[3];
       endcase
       end
   endmodule
CAS_NO_UNIQ
18
   The keywords 'unique' and 'priority' indicate the intent that the case statement will have exactly one case item that matches the case expression. However, the specified case statement, qualified with a'unique' keyword, has more than one case item that matches the
   case expression.
   The following example illustrates this problem:
   reg  [3:0]  reg_a;
   always @(posedge clk)
   begin
       reg_a = 12;
       unique case ( reg_a )
       6, 12, 14:  out_a = 32'd10012;
       2, 6, 7:    out_a = 32'd10015;
       3, 12, 10:  out_a = 32'd50009;
       default:    out_a = 32'd0;
   endcase
   end

   In the above code example, 'reg_a' is used as the case expression in a
   'unique case' statement, where two of the case item expressions are 12.
   It is recommended that case item expressions are mutually exclusive.
EXP_IS_OVFL
20
   Arithmetic operation results in overflow of bits leading to potential loss of data.
   The following example illustrates the problem:

   module mod_a();
       reg  [1:0] reg_a;
       reg  [1:0] reg_b;
       reg  [1:0] reg_c;
       wire [1:0] wir_a;
       wire [1:0] wir_b;
       wire [1:0] wir_c;
       assign wir_a = reg_a + 2'd2;
       assign wir_b = reg_b + 2'b11;
       assign wir_c = reg_c - 2'b11;
   endmodule

   In the above code, 2-bit wires, wir_a, wir_b, wir_c                
   are being assigned a value that can be greater than
   the maximum value that it can hold. This can lead to loss
   of bits. 
   Remodel the design to avoid this violation.
FSM_IS_DLCK
45
   A deadlock situation has been detected for a state of the FSM. This can occur if either
   there is no outgoing edge from the current state or the condition of the outgoing edge
   cannot be met. To avoid this violation, modify the RTL and rerun the design.
   Consider the given example:
   module FSM (din, a_rst, clk, z_o);
      input  din, a_rst,clk;
      output z_o;
      reg z_o;
      parameter [1:0] s0=0, s1=1, s2=2;
      reg [1:0] ps, ns;
      // sequential block
      always @ (posedge clk or posedge a_rst)
      begin: seq_block
         if (a_rst)
            ps = s0;
         else
            ps = ns;
      end

      // combinational block
      always @ (ps or din)
      begin: comb_block
         ns  = s0;
         z_o = 1'b1;
         case (ps)
           s0: begin
             z_o = 1'b0;
              end
           s1: begin
                if (din == 1'b0)
                   ns = s0;
                else
                   ns = s2;
              end
           s2: begin
                if (din == 1'b1)
                   ns = s1;
                else
                   ns = s0;
              end
         endcase
      end
   endmodule
   In the given example, after reaching s0, the design remains in that state.
   This means that a deadlock has been reached, and a violation is reported.
FSM_IS_LLCK
62
   Livelock condition detected for the FSM. The states of the processes involved in this
   condition constantly change with regard to one another but do not progress to some other state.
   To avoid this violation, modify the RTL and rerun the design.
   Consider the given example:
   module FSM (err, ack,req, clk, rst);
   output err;
   output [3:0] ack;
   input [3:0] req;
   input clk, rst;
   reg err;
   reg [3:0] ack;
   reg [2:0] state, next;
   integer i;
   always @(posedge clk)
      if (rst)
        state <= 3'b000;
      else
        state <= next;
   always @(state or req)
   begin
      next = 3'bxxx;
      err = 0;
      ack = 0;
    case(state)
           3'b000: begin
                  case(req)
                     4'b0001 : next = 3'b001;
                     default : next = 3'b000;
                 endcase
                 end
           3'b001: begin
                  case(req)
                     4'b0010 : next = 3'b010;
                     default : next = 3'b001;
                 endcase
                 ack[0] = 1;
                 ack[1] = 1;
               end
           3'b010: begin
                  case(req)
                     4'b0100 : next = 3'b011;
                 endcase
                 ack[1] = 1;
                 ack[2] = 1;
               end
           3'b011: begin
                  case(req)
                     4'b1000 : next = 3'b100; // missing default statement
                 endcase
                 ack[3] = 1;
               end
           3'b100: begin
                  case(req)
                     4'b0000 : next = 3'b000;
                     default : next = 3'b100;
                 endcase
                 err = 1;
                 end
      endcase
      end
   endmodule
   In the given example, a Livelock is detected at state 3'b011 and a violation is reported.
FSM_NO_MTRN
36
   An unreachable consequent transition in a FSM has been detected. There is no 
   scenario where the mentioned source state will move to the first target state 
   and then to the next target state in sequence.

   The following example illustrates this scenario:

   module FSM (clk, rst);
   input clk, rst;
   reg [2:0] state, next;
   wire en;
   always @(posedge clk)
       if (rst)
           state <= 2'b00;
       else
           state <= next;
   always @(state)
   begin
   case(state)
          2'b00: 
            next = 2'b01;
           2'b01: 
             if (en)
                 next = 2'b10;
             else
                 next = 2'b11;
           2'b10: 
             next = 2'b11;
           2'b11: 
             next = 2'b00;
           default:
             next = 2'bxx;
   endcase
   end
   endmodule

   In this example, if 'en' is stuck at 1'b0, the transition from 2'b01 to 2'b10 and then to 2'b11 is unreachable.
FSM_NO_RCHB
33
   There are unreachable states in the specified FSM. The unreachable
   states may create extra states that were not intended.
   The tool is unable to perform analysis for reachable states if variables
   are used in the combinational logic for the next state computations
   and therefore, takes a pessimistic approach.

   params FSMURS { fsm_states_in_default_clause="no/yes" }
   The default value for this parameter is 'no'.
   By default, the states that can only be reached from the default clause
   of the case statement are not considered for next state computations
   and are reported as unreachable states in the FSM.
   When the value of the parameter is set to 'yes', the tool
   considers the states in the default clause of the case statement as
   reachable.

   The following code illustrates the occurrence of FSMURS

   pro_comb : process (fsm, d)
   begin
       case fsm is
         when State_0 =>
             z <= '0';
             next_fsm <= State_1;
         when State_1 =>
             z <= '1';
             next_fsm <= State_0;
         when State_2 =>
             z <= d;
             next_fsm <= State_0;
       end case;
   end process pro_comb;
   In the above code,'State_2' is reported as an unreachable state because
  there is no path to this state from any other valid state in the FSM.
FSM_NO_TRRN
33
   An unreachable transition in a FSM has been detected. There is no scenario where the mentioned source state will move to the mentioned target state.
   The following example illustrates this scenario:

   module FSM (clk, rst);
   input clk, rst;
   reg [1:0] state, next;
   wire en;
   always @(posedge clk)
      if (rst)
        state <= 2'b00;
      else
        state <= next;
   always @(state)
   begin
   case(state)
           2'b00: 
             next = 2'b01;
           2'b01: 
               if (en)
                   next = 2'b10;
               else
                   next = 2'b11;
           2'b10: 
               next = 2'b11;
           2'b11: 
               next = 2'b00;
           default:
               next = 2'bxx;
   endcase
   end
   endmodule

   In this example, if 'en' is stuck at 1'b0, the transition from 2'b01 to 2'b10 is unreachable. 
SIG_IS_DLCK
46
   A deadlock situation has been detected for a signal.
   To avoid this violation, modify the RTL and rerun the design.
   Consider the given example:
   
   module FSM (din, a_rst, clk, z_o);
     input  din, a_rst,clk;
     output z_o;
     reg z_o;
     parameter [1:0] s0=0, s1=1, s2=2;
     reg [1:0] ps, ns;
     // sequential block
     always @ (posedge clk or posedge a_rst)
     begin: seq_block
       if (a_rst)
          ps = s0;
       else
          ps = ns;
     end

     // combinational block
     always @ (ps or din)
     begin: comb_block
        ns  = s0;
        z_o = 1'b1;
        case (ps)
          s0: begin
           z_o = 1'b0;
              end
          s1: begin
                if (din == 1'b0)
                  ns = s0;
                else
                  ns = s2;
              end
          s2: begin
                if (din == 1'b1)
                  ns = s1;
                else
                 ns = s0;
             end
           endcase
         end
    endmodule

   In the given example, after reaching s0, the design remains in that state.
   This means that a deadlock has been reached, and a violation is reported
SIG_IS_STCK
17
   A logic element stuck at a constant value has been detected. There is no design scenario where the logic element will get any other value. 
   The following example illustrates this scenario

   module mod_a(clk, rst, port_a, port_b);
      input clk, rst, port_a;
      output port_b;
      reg port_b;
      always @(posedge clk or negedge rst)
      begin
      if (!rst)
          port_b = 1'b1;
      else
          port_b = port_a | 1'b1;
      end
   endmodule
   In this example 'port_b' is always stuck at '1'b1'. 
   To avoid this violation, modify the RTL.
SIG_NO_TGFL
24
   The signal has not toggled from 1 to 0. Modify the RTL and rerun the design.
   Consider the given example:
   module top (clk1,reset,out);
   input clk1,reset;
   reg [7:0] count1;
   output [7:0] out;
   always @(posedge clk1)begin
     if(!reset)begin
       count1 <= 8'b00000000;
     end
     else begin
       if (count1 == 8'b11111110)
       begin
          count1 <= 8'b00000000;
       end
       else begin
         count1 = count1+ 8'b00000010;
       end
     end
   end
   assign out = count1;
   endmodule
   In the given example, a violation is reported for count1, in which the signal
   does not toggle from 1 to 0 at any point of time.
SIG_NO_TGRS
25
   The signal has not toggled from 0 to 1. Modify the RTL and rerun the design.
   Consider the given example:

   module top (clk1,reset,out);
   input clk1,reset;
   reg [7:0] count1;
   output [7:0] out;
   always @(posedge clk1)begin
     if(!reset)begin
       count1 <= 8'b00000000;
     end
     else begin
       if (count1 == 8'b11111110)
       begin
          count1 <= 8'b00000000;
       end
       else begin
         count1 = count1+ 8'b00000010;
       end
     end
   end
   assign out = count1;
   endmodule
   In the given example, a violation is reported for LSB of count1, in which
   the signal does not toggle from 0 to1 at any point of time.
<superLintPoiType-tagAndMessage>
19
ARITHMETIC_OVERFLOW
EXP_IS_OVFL
Arithmetic overflow failure found.
CONTENTION_BUS
BUS_IS_CONT
Contention bus failure found in bus "%1".
DEAD_CODE
BLK_NO_RCHB
The block is not reachable.
DEFAULT_CASE
CAS_IS_DFRC
A reachable default case was found.
FLOATING_BUS
BUS_IS_FLOT
Floating bus failure found in bus "%1".
FSM_MULTI_TRANS_COVER
FSM_NO_MTRN
Unreachable consequence transitions (%d1->%d2->%d3) found in the FSM "%1".
FSM_STATE_COVER
FSM_NO_RCHB
Unreachable states found (%d) in the FSM "%1".
FSM_STATE_DEADLOCK
FSM_IS_DLCK
A deadlock situation was found (%d) for a state of the FSM "%1".
FSM_STATE_LIVELOCK
FSM_IS_LLCK
Livelock condition found (%d) in the FSM "%1".
FSM_TRANS_COVER
FSM_NO_TRRN
Unreachable transitions found (%d1->%d2) in the FSM "%1".
OUT_OF_BOUND_INDEXING
ARY_IS_OOBI
Out-of-bound indexing failure found.
PRIORITY_CASE
CAS_NO_PRIO
Priority case failure found.
SIGNALS_DEADLOCK_SIGNALS
SIG_IS_DLCK
The signal "%1" is a deadlock signal.
SIGNALS_STUCKAT
SIG_IS_STCK
The signal "%1" is stuck-at %s.
SIGNALS_TOGGLE_FALL
SIG_NO_TGFL
The signal "%1" has not toggled from 1 to 0.
SIGNALS_TOGGLE_RISE
SIG_NO_TGRS
The signal "%1" has not toggled from 0 to 1.
SIGNALS_TOGGLE_STABLE
SIG_NO_TGST
The signal "%1" has not toggled stable.
UNIQUE_CASE
CAS_NO_UNIQ
Unique case failure found.
X_ASSIGNMENT
ASG_IS_XRCH
A reachable x-assignment was found.
<top-model-name>
top
<progress-events>
1
1695657600
1
<alias-tag>
0
<tag-mode>
0
<property-category-is-enabled>
2
AUTO_FORMAL_BUS
AUTO_FORMAL_OUT_OF_BOUND_INDEXING
<hal-category-is-enabled>
0
<candidate-merged-group>
23
$prop$../src/./MEMWBR.sv3737
../src/./MEMWBR.sv
37
37


2
1
1
$prop$../src/./MEMWBR.sv3939
../src/./MEMWBR.sv
39
39


2
1
2
$prop$../src/./MEMWBR.sv5252
../src/./MEMWBR.sv
52
52


2
1
3
$prop$ARY_IS_OOBI../src/./MEMWBR.sv3737
../src/./MEMWBR.sv
37
37
ARY_IS_OOBI

0
1
1
$prop$ARY_IS_OOBI../src/./MEMWBR.sv3939
../src/./MEMWBR.sv
39
39
ARY_IS_OOBI

0
1
2
$prop$ARY_IS_OOBI../src/./MEMWBR.sv5252
../src/./MEMWBR.sv
52
52
ARY_IS_OOBI

0
1
3
Warning$msg$../sim/SRAM/SRAM_rtl.sv11
../sim/SRAM/SRAM_rtl.sv
1
1

Warning
3
2
4
11
Warning$msg$../sim/SRAM/SRAM_rtl.sv122163
../sim/SRAM/SRAM_rtl.sv
122
163

Warning
3
1
12
Warning$msg$../sim/SRAM/SRAM_rtl.sv165168
../sim/SRAM/SRAM_rtl.sv
165
168

Warning
3
34
5
6
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
Warning$msg$../src/././ALU.sv3838
../src/././ALU.sv
38
38

Warning
3
1
7
Warning$msg$../src/././ALU.sv3939
../src/././ALU.sv
39
39

Warning
3
1
8
Warning$msg$../src/./SRAM_wrapper.sv33
../src/./SRAM_wrapper.sv
3
3

Warning
3
1
45
Warning$msg$../src/top.sv2727
../src/top.sv
27
27

Warning
3
2
9
10
Warning$msg$ALW_NR_TRIL../sim/SRAM/SRAM_rtl.sv167167
../sim/SRAM/SRAM_rtl.sv
167
167
ALW_NR_TRIL
Warning
1
1
5
Warning$msg$ASG_MS_RPAD../src/././ALU.sv3838
../src/././ALU.sv
38
38
ASG_MS_RPAD
Warning
1
1
7
Warning$msg$ASG_MS_RPAD../src/././ALU.sv3939
../src/././ALU.sv
39
39
ASG_MS_RPAD
Warning
1
1
8
Warning$msg$FIL_MS_DUNM../sim/SRAM/SRAM_rtl.sv11
../sim/SRAM/SRAM_rtl.sv
1
1
FIL_MS_DUNM
Warning
1
1
4
Warning$msg$FIL_NF_NMCV../sim/SRAM/SRAM_rtl.sv11
../sim/SRAM/SRAM_rtl.sv
1
1
FIL_NF_NMCV
Warning
1
1
11
Warning$msg$FLP_NO_ASRT../sim/SRAM/SRAM_rtl.sv122163
../sim/SRAM/SRAM_rtl.sv
122
163
FLP_NO_ASRT
Warning
1
1
12
Warning$msg$FLP_NR_ENCT../src/./SRAM_wrapper.sv33
../src/./SRAM_wrapper.sv
3
3
FLP_NR_ENCT
Warning
1
1
45
Warning$msg$MOD_NR_SYXZ../sim/SRAM/SRAM_rtl.sv167167
../sim/SRAM/SRAM_rtl.sv
167
167
MOD_NR_SYXZ
Warning
1
1
6
Warning$msg$SIG_IS_INTB../sim/SRAM/SRAM_rtl.sv165168
../sim/SRAM/SRAM_rtl.sv
165
168
SIG_IS_INTB
Warning
1
32
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
Warning$msg$WIR_NO_READ../src/top.sv2727
../src/top.sv
27
27
WIR_NO_READ
Warning
1
2
9
10
<id-to-merged-signature>
90
1
0
$prop$ARY_IS_OOBI../src/./MEMWBR.sv3737
../src/./MEMWBR.sv
37
37
ARY_IS_OOBI

0
1
2
$prop$../src/./MEMWBR.sv3737
../src/./MEMWBR.sv
37
37


2
2
0
$prop$ARY_IS_OOBI../src/./MEMWBR.sv3939
../src/./MEMWBR.sv
39
39
ARY_IS_OOBI

0
2
2
$prop$../src/./MEMWBR.sv3939
../src/./MEMWBR.sv
39
39


2
3
0
$prop$ARY_IS_OOBI../src/./MEMWBR.sv5252
../src/./MEMWBR.sv
52
52
ARY_IS_OOBI

0
3
2
$prop$../src/./MEMWBR.sv5252
../src/./MEMWBR.sv
52
52


2
4
1
Warning$msg$FIL_MS_DUNM../sim/SRAM/SRAM_rtl.sv11
../sim/SRAM/SRAM_rtl.sv
1
1
FIL_MS_DUNM
Warning
1
4
3
Warning$msg$../sim/SRAM/SRAM_rtl.sv11
../sim/SRAM/SRAM_rtl.sv
1
1

Warning
3
5
1
Warning$msg$ALW_NR_TRIL../sim/SRAM/SRAM_rtl.sv167167
../sim/SRAM/SRAM_rtl.sv
167
167
ALW_NR_TRIL
Warning
1
5
3
Warning$msg$../sim/SRAM/SRAM_rtl.sv165168
../sim/SRAM/SRAM_rtl.sv
165
168

Warning
3
6
1
Warning$msg$MOD_NR_SYXZ../sim/SRAM/SRAM_rtl.sv167167
../sim/SRAM/SRAM_rtl.sv
167
167
MOD_NR_SYXZ
Warning
1
6
3
Warning$msg$../sim/SRAM/SRAM_rtl.sv165168
../sim/SRAM/SRAM_rtl.sv
165
168

Warning
3
7
1
Warning$msg$ASG_MS_RPAD../src/././ALU.sv3838
../src/././ALU.sv
38
38
ASG_MS_RPAD
Warning
1
7
3
Warning$msg$../src/././ALU.sv3838
../src/././ALU.sv
38
38

Warning
3
8
1
Warning$msg$ASG_MS_RPAD../src/././ALU.sv3939
../src/././ALU.sv
39
39
ASG_MS_RPAD
Warning
1
8
3
Warning$msg$../src/././ALU.sv3939
../src/././ALU.sv
39
39

Warning
3
9
1
Warning$msg$WIR_NO_READ../src/top.sv2727
../src/top.sv
27
27
WIR_NO_READ
Warning
1
9
3
Warning$msg$../src/top.sv2727
../src/top.sv
27
27

Warning
3
10
1
Warning$msg$WIR_NO_READ../src/top.sv2727
../src/top.sv
27
27
WIR_NO_READ
Warning
1
10
3
Warning$msg$../src/top.sv2727
../src/top.sv
27
27

Warning
3
11
1
Warning$msg$FIL_NF_NMCV../sim/SRAM/SRAM_rtl.sv11
../sim/SRAM/SRAM_rtl.sv
1
1
FIL_NF_NMCV
Warning
1
11
3
Warning$msg$../sim/SRAM/SRAM_rtl.sv11
../sim/SRAM/SRAM_rtl.sv
1
1

Warning
3
12
1
Warning$msg$FLP_NO_ASRT../sim/SRAM/SRAM_rtl.sv122163
../sim/SRAM/SRAM_rtl.sv
122
163
FLP_NO_ASRT
Warning
1
12
3
Warning$msg$../sim/SRAM/SRAM_rtl.sv122163
../sim/SRAM/SRAM_rtl.sv
122
163

Warning
3
13
1
Warning$msg$SIG_IS_INTB../sim/SRAM/SRAM_rtl.sv165168
../sim/SRAM/SRAM_rtl.sv
165
168
SIG_IS_INTB
Warning
1
13
3
Warning$msg$../sim/SRAM/SRAM_rtl.sv165168
../sim/SRAM/SRAM_rtl.sv
165
168

Warning
3
14
1
Warning$msg$SIG_IS_INTB../sim/SRAM/SRAM_rtl.sv165168
../sim/SRAM/SRAM_rtl.sv
165
168
SIG_IS_INTB
Warning
1
14
3
Warning$msg$../sim/SRAM/SRAM_rtl.sv165168
../sim/SRAM/SRAM_rtl.sv
165
168

Warning
3
15
1
Warning$msg$SIG_IS_INTB../sim/SRAM/SRAM_rtl.sv165168
../sim/SRAM/SRAM_rtl.sv
165
168
SIG_IS_INTB
Warning
1
15
3
Warning$msg$../sim/SRAM/SRAM_rtl.sv165168
../sim/SRAM/SRAM_rtl.sv
165
168

Warning
3
16
1
Warning$msg$SIG_IS_INTB../sim/SRAM/SRAM_rtl.sv165168
../sim/SRAM/SRAM_rtl.sv
165
168
SIG_IS_INTB
Warning
1
16
3
Warning$msg$../sim/SRAM/SRAM_rtl.sv165168
../sim/SRAM/SRAM_rtl.sv
165
168

Warning
3
17
1
Warning$msg$SIG_IS_INTB../sim/SRAM/SRAM_rtl.sv165168
../sim/SRAM/SRAM_rtl.sv
165
168
SIG_IS_INTB
Warning
1
17
3
Warning$msg$../sim/SRAM/SRAM_rtl.sv165168
../sim/SRAM/SRAM_rtl.sv
165
168

Warning
3
18
1
Warning$msg$SIG_IS_INTB../sim/SRAM/SRAM_rtl.sv165168
../sim/SRAM/SRAM_rtl.sv
165
168
SIG_IS_INTB
Warning
1
18
3
Warning$msg$../sim/SRAM/SRAM_rtl.sv165168
../sim/SRAM/SRAM_rtl.sv
165
168

Warning
3
19
1
Warning$msg$SIG_IS_INTB../sim/SRAM/SRAM_rtl.sv165168
../sim/SRAM/SRAM_rtl.sv
165
168
SIG_IS_INTB
Warning
1
19
3
Warning$msg$../sim/SRAM/SRAM_rtl.sv165168
../sim/SRAM/SRAM_rtl.sv
165
168

Warning
3
20
1
Warning$msg$SIG_IS_INTB../sim/SRAM/SRAM_rtl.sv165168
../sim/SRAM/SRAM_rtl.sv
165
168
SIG_IS_INTB
Warning
1
20
3
Warning$msg$../sim/SRAM/SRAM_rtl.sv165168
../sim/SRAM/SRAM_rtl.sv
165
168

Warning
3
21
1
Warning$msg$SIG_IS_INTB../sim/SRAM/SRAM_rtl.sv165168
../sim/SRAM/SRAM_rtl.sv
165
168
SIG_IS_INTB
Warning
1
21
3
Warning$msg$../sim/SRAM/SRAM_rtl.sv165168
../sim/SRAM/SRAM_rtl.sv
165
168

Warning
3
22
1
Warning$msg$SIG_IS_INTB../sim/SRAM/SRAM_rtl.sv165168
../sim/SRAM/SRAM_rtl.sv
165
168
SIG_IS_INTB
Warning
1
22
3
Warning$msg$../sim/SRAM/SRAM_rtl.sv165168
../sim/SRAM/SRAM_rtl.sv
165
168

Warning
3
23
1
Warning$msg$SIG_IS_INTB../sim/SRAM/SRAM_rtl.sv165168
../sim/SRAM/SRAM_rtl.sv
165
168
SIG_IS_INTB
Warning
1
23
3
Warning$msg$../sim/SRAM/SRAM_rtl.sv165168
../sim/SRAM/SRAM_rtl.sv
165
168

Warning
3
24
1
Warning$msg$SIG_IS_INTB../sim/SRAM/SRAM_rtl.sv165168
../sim/SRAM/SRAM_rtl.sv
165
168
SIG_IS_INTB
Warning
1
24
3
Warning$msg$../sim/SRAM/SRAM_rtl.sv165168
../sim/SRAM/SRAM_rtl.sv
165
168

Warning
3
25
1
Warning$msg$SIG_IS_INTB../sim/SRAM/SRAM_rtl.sv165168
../sim/SRAM/SRAM_rtl.sv
165
168
SIG_IS_INTB
Warning
1
25
3
Warning$msg$../sim/SRAM/SRAM_rtl.sv165168
../sim/SRAM/SRAM_rtl.sv
165
168

Warning
3
26
1
Warning$msg$SIG_IS_INTB../sim/SRAM/SRAM_rtl.sv165168
../sim/SRAM/SRAM_rtl.sv
165
168
SIG_IS_INTB
Warning
1
26
3
Warning$msg$../sim/SRAM/SRAM_rtl.sv165168
../sim/SRAM/SRAM_rtl.sv
165
168

Warning
3
27
1
Warning$msg$SIG_IS_INTB../sim/SRAM/SRAM_rtl.sv165168
../sim/SRAM/SRAM_rtl.sv
165
168
SIG_IS_INTB
Warning
1
27
3
Warning$msg$../sim/SRAM/SRAM_rtl.sv165168
../sim/SRAM/SRAM_rtl.sv
165
168

Warning
3
28
1
Warning$msg$SIG_IS_INTB../sim/SRAM/SRAM_rtl.sv165168
../sim/SRAM/SRAM_rtl.sv
165
168
SIG_IS_INTB
Warning
1
28
3
Warning$msg$../sim/SRAM/SRAM_rtl.sv165168
../sim/SRAM/SRAM_rtl.sv
165
168

Warning
3
29
1
Warning$msg$SIG_IS_INTB../sim/SRAM/SRAM_rtl.sv165168
../sim/SRAM/SRAM_rtl.sv
165
168
SIG_IS_INTB
Warning
1
29
3
Warning$msg$../sim/SRAM/SRAM_rtl.sv165168
../sim/SRAM/SRAM_rtl.sv
165
168

Warning
3
30
1
Warning$msg$SIG_IS_INTB../sim/SRAM/SRAM_rtl.sv165168
../sim/SRAM/SRAM_rtl.sv
165
168
SIG_IS_INTB
Warning
1
30
3
Warning$msg$../sim/SRAM/SRAM_rtl.sv165168
../sim/SRAM/SRAM_rtl.sv
165
168

Warning
3
31
1
Warning$msg$SIG_IS_INTB../sim/SRAM/SRAM_rtl.sv165168
../sim/SRAM/SRAM_rtl.sv
165
168
SIG_IS_INTB
Warning
1
31
3
Warning$msg$../sim/SRAM/SRAM_rtl.sv165168
../sim/SRAM/SRAM_rtl.sv
165
168

Warning
3
32
1
Warning$msg$SIG_IS_INTB../sim/SRAM/SRAM_rtl.sv165168
../sim/SRAM/SRAM_rtl.sv
165
168
SIG_IS_INTB
Warning
1
32
3
Warning$msg$../sim/SRAM/SRAM_rtl.sv165168
../sim/SRAM/SRAM_rtl.sv
165
168

Warning
3
33
1
Warning$msg$SIG_IS_INTB../sim/SRAM/SRAM_rtl.sv165168
../sim/SRAM/SRAM_rtl.sv
165
168
SIG_IS_INTB
Warning
1
33
3
Warning$msg$../sim/SRAM/SRAM_rtl.sv165168
../sim/SRAM/SRAM_rtl.sv
165
168

Warning
3
34
1
Warning$msg$SIG_IS_INTB../sim/SRAM/SRAM_rtl.sv165168
../sim/SRAM/SRAM_rtl.sv
165
168
SIG_IS_INTB
Warning
1
34
3
Warning$msg$../sim/SRAM/SRAM_rtl.sv165168
../sim/SRAM/SRAM_rtl.sv
165
168

Warning
3
35
1
Warning$msg$SIG_IS_INTB../sim/SRAM/SRAM_rtl.sv165168
../sim/SRAM/SRAM_rtl.sv
165
168
SIG_IS_INTB
Warning
1
35
3
Warning$msg$../sim/SRAM/SRAM_rtl.sv165168
../sim/SRAM/SRAM_rtl.sv
165
168

Warning
3
36
1
Warning$msg$SIG_IS_INTB../sim/SRAM/SRAM_rtl.sv165168
../sim/SRAM/SRAM_rtl.sv
165
168
SIG_IS_INTB
Warning
1
36
3
Warning$msg$../sim/SRAM/SRAM_rtl.sv165168
../sim/SRAM/SRAM_rtl.sv
165
168

Warning
3
37
1
Warning$msg$SIG_IS_INTB../sim/SRAM/SRAM_rtl.sv165168
../sim/SRAM/SRAM_rtl.sv
165
168
SIG_IS_INTB
Warning
1
37
3
Warning$msg$../sim/SRAM/SRAM_rtl.sv165168
../sim/SRAM/SRAM_rtl.sv
165
168

Warning
3
38
1
Warning$msg$SIG_IS_INTB../sim/SRAM/SRAM_rtl.sv165168
../sim/SRAM/SRAM_rtl.sv
165
168
SIG_IS_INTB
Warning
1
38
3
Warning$msg$../sim/SRAM/SRAM_rtl.sv165168
../sim/SRAM/SRAM_rtl.sv
165
168

Warning
3
39
1
Warning$msg$SIG_IS_INTB../sim/SRAM/SRAM_rtl.sv165168
../sim/SRAM/SRAM_rtl.sv
165
168
SIG_IS_INTB
Warning
1
39
3
Warning$msg$../sim/SRAM/SRAM_rtl.sv165168
../sim/SRAM/SRAM_rtl.sv
165
168

Warning
3
40
1
Warning$msg$SIG_IS_INTB../sim/SRAM/SRAM_rtl.sv165168
../sim/SRAM/SRAM_rtl.sv
165
168
SIG_IS_INTB
Warning
1
40
3
Warning$msg$../sim/SRAM/SRAM_rtl.sv165168
../sim/SRAM/SRAM_rtl.sv
165
168

Warning
3
41
1
Warning$msg$SIG_IS_INTB../sim/SRAM/SRAM_rtl.sv165168
../sim/SRAM/SRAM_rtl.sv
165
168
SIG_IS_INTB
Warning
1
41
3
Warning$msg$../sim/SRAM/SRAM_rtl.sv165168
../sim/SRAM/SRAM_rtl.sv
165
168

Warning
3
42
1
Warning$msg$SIG_IS_INTB../sim/SRAM/SRAM_rtl.sv165168
../sim/SRAM/SRAM_rtl.sv
165
168
SIG_IS_INTB
Warning
1
42
3
Warning$msg$../sim/SRAM/SRAM_rtl.sv165168
../sim/SRAM/SRAM_rtl.sv
165
168

Warning
3
43
1
Warning$msg$SIG_IS_INTB../sim/SRAM/SRAM_rtl.sv165168
../sim/SRAM/SRAM_rtl.sv
165
168
SIG_IS_INTB
Warning
1
43
3
Warning$msg$../sim/SRAM/SRAM_rtl.sv165168
../sim/SRAM/SRAM_rtl.sv
165
168

Warning
3
44
1
Warning$msg$SIG_IS_INTB../sim/SRAM/SRAM_rtl.sv165168
../sim/SRAM/SRAM_rtl.sv
165
168
SIG_IS_INTB
Warning
1
44
3
Warning$msg$../sim/SRAM/SRAM_rtl.sv165168
../sim/SRAM/SRAM_rtl.sv
165
168

Warning
3
45
1
Warning$msg$FLP_NR_ENCT../src/./SRAM_wrapper.sv33
../src/./SRAM_wrapper.sv
3
3
FLP_NR_ENCT
Warning
1
45
3
Warning$msg$../src/./SRAM_wrapper.sv33
../src/./SRAM_wrapper.sv
3
3

Warning
3
<propertyId-to-fsmInfo>
0
<fsmName-to-idleState>
0
